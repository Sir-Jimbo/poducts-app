{"version":3,"sources":["components/Navigation/Navigation.js","images/default-avatar.png","components/button/button.js","components/UserMenu/UserMenu.jsx","components/AuthNav/AuthNav.js","components/Header/Header.jsx","components/Layout/Layout.jsx","components/Section/Section.jsx","components/PrivateRoute/PrivateRoute.js","components/PublicRoute/PublicRoute.js","components/App/App.jsx","redux/products/products-reducers.js","redux/auth/auth-reducer.js","redux/store.js","index.jsx","redux/products/products-actions.js","redux/auth/auth-selectors.js","Api/AxiosToken.js","components/Spinner/Spinner.jsx","redux/auth/auth-operations.js","components/UserMenu/UserMenu.module.css","redux/auth/auth-actions.js","components/Header/Header.module.css","components/Section/Section.module.css"],"names":["Navigation","isLoggedIn","useSelector","authSelectors","getIsAuthenticated","className","to","exact","activeClassName","useStyles","makeStyles","root","background","border","borderRadius","boxShadow","color","height","padding","ButtonMenu","onClick","classes","Button","UserMenu","dispatch","useDispatch","name","getUsername","onLogout","useCallback","authOperations","logout","s","container","src","defaultAvatar","alt","width","avatar","AuthNav","Header","Layout","children","Section","PrivateRoute","redirectTo","routeProps","PublicRoute","restricted","shouldRedirect","HomePage","lazy","LoginPage","ProductsPage","ProductPage","App","useEffect","getCurrentUser","fallback","Spinner","path","component","initialState","products","createReducer","fetchProductsSuccess","_","payload","page","fetchProductsPageSuccess","loading","fetchProductsRequest","fetchProductsError","fetchProductsPageRequest","fetchProductsPageError","setError","error","clearError","combineReducers","initialUserState","email","user","authActions","loginSuccess","logoutSuccess","getCurrentUserSuccess","token","access_token","loginRequest","loginError","logoutRequest","logoutError","getCurrentUserRequest","getCurrentUserError","isAuthenticated","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducer","productsReducer","devTools","process","persistor","persistStore","ReactDOM","render","document","getElementById","createAction","state","getError","getLoading","errorLogout","AxiosToken","set","axios","defaults","headers","common","Authorization","unset","BaseURL","baseURL","type","timeout","login","credentials","a","post","response","data","toast","info","message","getState","persistedToken","get","module","exports","getRefreshTokenStart","getRefreshTokenSuccess","getRefreshTokenError"],"mappings":"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","file":"static/js/main.6d3735e0.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport authSelectors from '../../redux/auth/auth-selectors';\n\nexport default function Navigation() {\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\n\n  return (\n    <nav className=\"nav\">\n      {isLoggedIn\n        ? (\n          <NavLink\n            to=\"/products\"\n            exact\n            className=\"NavLink\"\n            activeClassName=\"NavLink--active\"\n          >\n            Products\n          </NavLink>\n        )\n\n        : (<NavLink\n          to=\"/\"\n          exact\n          className=\"NavLink\"\n          activeClassName=\"NavLink--active\"\n        >\n          Home\n        </NavLink>\n        )}\n    </nav>\n  );\n}","export default __webpack_public_path__ + \"static/media/default-avatar.e44fc4e2.png\";","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles({\n  root: {\n    background: 'linear-gradient(45deg, #f44336 30%, #f44336 90%)',\n    border: 0,\n    borderRadius: 3,\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    color: 'white',\n    height: 36,\n    padding: '0 20px',\n  },\n});\n\nexport default function ButtonMenu({onClick}) {\n  const classes = useStyles();\n  return <Button onClick={onClick} className={classes.root}>Logout</Button>;\n}","import React, { useCallback } from 'react';\nimport s from './UserMenu.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport authSelectors from '../../redux/auth/auth-selectors';\nimport authOperations from '../../redux/auth/auth-operations';\nimport defaultAvatar from '../../images/default-avatar.png';\nimport ButtonMenu from '../button/button';\n\nexport default function UserMenu() {\n  const dispatch = useDispatch();\n  const name = useSelector(authSelectors.getUsername);\n\n  const onLogout = useCallback(() => {\n    dispatch(authOperations.logout());\n  }, [dispatch]);\n\n  return (\n    <div className={s.container}>\n      <img src={defaultAvatar} alt=\"\" width=\"32\" className={s.avatar} />\n      <span className={s.name}>Welcome, {name}</span>\n      {/* My button\n    <button className={s.MenuButton} type=\"button\" onClick={onLogout}>\n      Logout\n    </button> */}\n\n      {/* Button from Material UI */}\n      <ButtonMenu onClick={onLogout} />\n    </div>\n  );\n}","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst AuthNav = () => (\n  <div>\n    <NavLink\n      to=\"/login\"\n      exact\n      className=\"NavLink\"\n      activeClassName=\"NavLink--active\"\n    >\n      Log in\n    </NavLink>\n  </div>\n);\n\nexport default AuthNav;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport Navigation from '../Navigation/Navigation';\r\nimport UserMenu from '../UserMenu/UserMenu';\r\nimport AuthNav from '../AuthNav/AuthNav';\r\n\r\nimport authSelectors from '../../redux/auth/auth-selectors';\r\nimport s from './Header.module.css';\r\n\r\nexport default function Header() {\r\n   const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\r\n   return (\r\n      <header className={s.container}>\r\n         <Navigation />\r\n         {isLoggedIn ? <UserMenu /> : <AuthNav />}\r\n      </header>\r\n   );\r\n};","import React from 'react';\r\nimport Header from '../Header/Header'\r\n\r\n\r\nconst Layout = ({ children }) => {\r\n   return (\r\n      <>\r\n         <Header />\r\n         <main>\r\n            {children}\r\n         </main>\r\n      </>\r\n   );\r\n};\r\n\r\nexport default Layout;","import React from 'react';\r\nimport s from './Section.module.css';\r\n\r\n\r\nconst Section = ({ children }) => {\r\n   return (\r\n      <>\r\n         <section className={s.container}>\r\n            {children}\r\n         </section>\r\n      </>\r\n   );\r\n};\r\n\r\nexport default Section;","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport authSelectors from '../../redux/auth/auth-selectors';\n\n/**\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\n * - В противном случае рендерит Redirect на /login\n */\nexport default function PrivateRoute({\n  children,\n  redirectTo,\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\n\n  return (\n    <Route {...routeProps}>\n      {isLoggedIn\n        ? children\n        : <Redirect to={redirectTo} />\n      }\n    </Route>\n  );\n}","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport authSelectors from '../../redux/auth/auth-selectors';\n\n/**\n * - Если маршрут ограниченный, и пользователь залогинен, рендерит редирект на /products\n * - В противном случае рендерит компонент\n */\nexport default function PublicRoute({\n  children,\n  restricted = false,\n  redirectTo,\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\n  const shouldRedirect = isLoggedIn && restricted;\n\n  return (\n\n    <Route {...routeProps}>\n      {shouldRedirect\n        ? <Redirect to={redirectTo} />\n        : children\n      }\n    </Route>\n  );\n};","import React, { useEffect, Suspense, lazy } from 'react';\r\nimport { Switch } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport Layout from 'components/Layout/Layout';\r\nimport Section from 'components/Section/Section';\r\nimport Spinner from '../Spinner/Spinner';\r\nimport PrivateRoute from '../PrivateRoute/PrivateRoute';\r\nimport PublicRoute from '../PublicRoute/PublicRoute';\r\n\r\nimport authOperations from '../../redux/auth/auth-operations';\r\n\r\n\r\nconst HomePage = lazy(() => import('../../pages/HomePage/HomePage'));\r\nconst LoginPage = lazy(() => import('../../pages/LoginPage/LoginPage'));\r\nconst ProductsPage = lazy(() => import('../../pages/ProductsPage'));\r\nconst ProductPage = lazy(() => import('../../pages/ProductPage/ProductPage'));\r\n\r\nexport default function App() {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(authOperations.getCurrentUser());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Layout>\r\n      <Section>\r\n        <Suspense fallback={<Spinner />}>\r\n          <Switch>\r\n            <PublicRoute\r\n              exact\r\n              path=\"/\"\r\n              restricted\r\n              redirectTo=\"/products\"\r\n              component={HomePage} />\r\n            <PublicRoute\r\n              path=\"/login\"\r\n              restricted\r\n              redirectTo=\"/products\"\r\n              component={LoginPage} />\r\n            <PrivateRoute\r\n              exact\r\n              path=\"/products\"\r\n              restricted\r\n              redirectTo=\"/login\"\r\n              component={ProductsPage}\r\n            />\r\n            <PrivateRoute\r\n              exact\r\n              path=\"/products/:id\"\r\n              redirectTo=\"/login\"\r\n              component={ProductPage}\r\n            />\r\n          </Switch>\r\n        </Suspense>\r\n      </Section>\r\n    </Layout>\r\n  );\r\n}","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n   fetchProductsRequest,\r\n   fetchProductsSuccess,\r\n   fetchProductsError,\r\n   fetchProductsPageRequest,\r\n   fetchProductsPageSuccess,\r\n   fetchProductsPageError,\r\n   changeFilter,\r\n   clearError\r\n} from './products-actions';\r\n\r\nconst initialState = {\r\n   products: [],\r\n   page: []\r\n}\r\nconst products = createReducer(initialState.products, {\r\n   [fetchProductsSuccess]: (_, { payload }) => payload,\r\n\r\n});\r\n\r\nconst page = createReducer(initialState.page, {\r\n   [fetchProductsPageSuccess]: (_, { payload }) => payload\r\n})\r\n\r\nconst loading = createReducer(false, {\r\n   [fetchProductsRequest]: () => true,\r\n   [fetchProductsSuccess]: () => false,\r\n   [fetchProductsError]: () => false,\r\n   [fetchProductsPageRequest]: () => true,\r\n   [fetchProductsPageSuccess]: () => false,\r\n   [fetchProductsPageError]: () => false,\r\n});\r\n\r\nconst setError = (_, { payload }) => payload;\r\n\r\nconst error = createReducer(null, {\r\n   [fetchProductsError]: setError,\r\n   [fetchProductsPageError]: setError,\r\n   [clearError]: () => null,\r\n});\r\n\r\n/*\r\nconst refreshTokenError = createReducer('', {\r\n   [fetchProductsError]: (_, { payload }) => payload,\r\n   [clearError]: (_, { payload }) => payload,\r\n});\r\n*/\r\nexport default combineReducers({\r\n   products,\r\n   loading,\r\n   error,\r\n   page\r\n   //refreshTokenError\r\n});","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport authActions from './auth-actions';\n\nconst initialUserState = {\n    name: null,\n    email: null\n\n};\n\nconst user = createReducer(initialUserState, {\n    [authActions.loginSuccess]: (_, { payload }) => payload.user,\n    [authActions.logoutSuccess]: () => initialUserState,\n    [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\n    //[authActions.getRefreshTokenSuccess]: (_, { payload }) => payload.user,\n});\n\nconst token = createReducer(null, {\n    [authActions.loginSuccess]: (_, { payload }) => payload.access_token,\n    //[authActions.getRefreshTokenSuccess]: (_, { payload }) => payload.token,\n    [authActions.logoutSuccess]: () => null\n});\n\nconst loading = createReducer(false, {\n    [authActions.loginRequest]: () => true,\n    [authActions.loginSuccess]: () => false,\n    [authActions.loginError]: () => false,\n    [authActions.logoutRequest]: () => true,\n    [authActions.logoutSuccess]: () => false,\n    [authActions.logoutError]: () => false,\n    [authActions.getCurrentUserRequest]: () => true,\n    [authActions.getCurrentUserSuccess]: () => false,\n    [authActions.getCurrentUserError]: () => false,\n    [authActions.clearError]: () => false,\n});\n\n\nconst setError = (_, { payload }) => payload;\n\nconst error = createReducer(null, {\n    [authActions.loginError]: () => \"Internal server error. Please try later\",\n    [authActions.logoutError]: setError,\n    [authActions.getCurrentUserError]: setError,\n    //[authActions.getRefreshTokenError]: setError,\n    [authActions.clearError]: () => null,\n});\n\nconst isAuthenticated = createReducer(false, {\n    [authActions.loginSuccess]: () => true,\n    [authActions.getCurrentUserSuccess]: () => true,\n    [authActions.loginError]: () => false,\n    [authActions.getCurrentUserError]: () => false,\n    [authActions.logoutSuccess]: () => false\n});\n\n\n/*\nconst refreshToken = createReducer(null, {\n    [authActions.refreshTokenAction]: (_, { payload }) => payload,\n    [authActions.logoutSuccess]: () => null,\n});*/\n\nexport default combineReducers({\n    user,\n    isAuthenticated,\n    token,\n    loading,\n    error,\n    //refreshToken\n});","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\n//import logger from 'redux-logger';\r\nimport {\r\n   persistStore,\r\n   persistReducer,\r\n   FLUSH,\r\n   REHYDRATE,\r\n   PAUSE,\r\n   PERSIST,\r\n   PURGE,\r\n   REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport productsReducer from './products/products-reducers';\r\nimport authReducer from './auth/auth-reducer';\r\n\r\nconst middleware = [\r\n   ...getDefaultMiddleware({\r\n      serializableCheck: {\r\n         ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n   }),\r\n   //logger\r\n];\r\n\r\nconst authPersistConfig = {\r\n   key: 'auth',\r\n   storage,\r\n   whitelist: ['token']\r\n};\r\n\r\nconst store = configureStore({\r\n   reducer: {\r\n      auth: persistReducer(authPersistConfig, authReducer),\r\n      products: productsReducer\r\n   },\r\n   middleware,\r\n   devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { store, persistor };\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport App from './components/App/App';\r\nimport store from './redux/store';\r\nimport Spinner from './components/Spinner/Spinner';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <Provider store={store.store}>\r\n    <PersistGate\r\n      loading={<Spinner />}\r\n      persistor={store.persistor}>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </PersistGate>\r\n  </Provider >,\r\n  document.getElementById('root'),\r\n);\r\n","\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\n\r\nexport const fetchProductsRequest = createAction('products/fetchProductsRequest');\r\nexport const fetchProductsSuccess = createAction('products/fetchProductsSuccess');\r\nexport const fetchProductsError = createAction('products/fetchProductsError');\r\n\r\nexport const fetchProductsPageRequest = createAction('products/fetchProductsPageRequest');\r\nexport const fetchProductsPageSuccess = createAction('products/fetchProductsPageSuccess');\r\nexport const fetchProductsPageError = createAction('products/fetchProductsPageError');\r\n\r\n\r\nexport const changeFilter = createAction('products/changeFilter');\r\n\r\nexport const clearError = createAction('products/clearError');","const getIsAuthenticated = state => state.auth.isAuthenticated;\n\nconst getUsername = state => state.auth.user.name;\n\nconst getError = state => state.auth.error;\n\n//const getToken = state => state.auth.token;\n\n//const refreshToken = state => state.auth.refreshToken;\n\nconst getLoading = state => state.auth.loading;\n\nconst errorLogout = state => state.auth.errorLogout;\n\nconst authSelectors = {\n    getIsAuthenticated,\n    getUsername,\n    getError,\n    //getToken,\n    //refreshToken,\n    getLoading,\n    errorLogout\n};\n\nexport default authSelectors;","import axios from 'axios';\n\nexport function AxiosToken() {\n  const token = {\n    set(token) {\n      axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n    },\n    unset() {\n      axios.defaults.headers.common.Authorization = '';\n    },\n  };\n  return token;\n}\n\nexport function BaseURL() {\n  return (axios.defaults.baseURL = '//dummy-api.d0.acom.cloud');\n}\n","import React from 'react';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nconst Spinner = () => (\r\n   <Loader\r\n      type=\"TailSpin\"\r\n      color=\"blue\"\r\n      height={100}\r\n      width={100}\r\n      timeout={300}\r\n   />\r\n);\r\n\r\nexport default Spinner;","import axios from 'axios';\nimport { AxiosToken, BaseURL } from '../../Api/AxiosToken';\nimport authActions from './auth-actions';\nimport { toast } from 'react-toastify';\n\nBaseURL();\n\n/*\nconst register = credential => async dispatch => {\n  dispatch(authActions.registerRequest());\n\n  try {\n    const response = await axios.post('/users/signup', credential);\n\n    token.set(response.data.token);\n    dispatch(authActions.registerSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.registerError(error.message));\n  }\n};*/\n\n\n\nconst login = credentials => async dispatch => {\n  dispatch(authActions.loginRequest());\n\n  try {\n    const response = await axios.post('/api/auth/login', credentials);\n\n    AxiosToken().set(response.data.token);\n    //dispatch(authActions.refreshTokenAction(response.data.refreshToken));\n    dispatch(authActions.loginSuccess(response.data));\n    toast.info('Welcоme!')\n  } catch (error) {\n    dispatch(authActions.loginError(error.message));\n    toast.error('Internal server error. Please try later')\n  }\n};\n\nconst logout = () => async dispatch => {\n  dispatch(authActions.logoutRequest());\n\n  try {\n    //await axios.post('/api/auth/logout');\n\n    AxiosToken().unset();\n    dispatch(authActions.logoutSuccess());\n  } catch (error) {\n    dispatch(authActions.logoutError(error.message));\n  }\n};\n/*\nconst refToken = () => async (dispatch, getState) => {\n  dispatch(authActions.getRefreshTokenStart());\n  const {\n    auth: { refreshToken: persistedReToken },\n  } = getState();\n\n  const reToken = { refreshToken: persistedReToken };\n  if (!persistedReToken) {\n    return;\n  }\n\n  try {\n    const response = await axios.post('/api/auth/refresh', reToken);\n    AxiosToken().set(response.data.token);\n    dispatch(authActions.getRefreshTokenSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.getRefreshTokenError(error.message));\n  }\n};\n*/\nconst getCurrentUser = () => async (dispatch, getState) => {\n  const { auth: { token: persistedToken }, } = getState();\n\n  if (!persistedToken) {\n    return;\n  }\n\n  AxiosToken().set(persistedToken);\n\n  dispatch(authActions.getCurrentUserRequest());\n\n  try {\n    const response = await axios.get('/api/auth/user-profile');\n\n    dispatch(authActions.getCurrentUserSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.getCurrentUserError(error.message));\n    //На случай если в локал сторедж остался какой-то токен чтобы его почистить\n    dispatch(authActions.logoutSuccess());\n  }\n};\n\nconst authOperations = {\n  //register,\n  //refToken,\n  login,\n  logout,\n  getCurrentUser\n};\n\nexport default authOperations;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UserMenu_container__1XvVt\",\"avatar\":\"UserMenu_avatar__1mPjy\",\"name\":\"UserMenu_name__2swbV\",\"button\":\"UserMenu_button__3P9kS\"};","import { createAction } from '@reduxjs/toolkit';\n\nconst getRefreshTokenStart = createAction('auth/getRefreshTokenStart');\nconst getRefreshTokenSuccess = createAction('auth/getRefreshTokenSuccess');\nconst getRefreshTokenError = createAction('auth/getRefreshTokenError');\n\nconst loginSuccess = createAction('auth/loginSuccess');\nconst loginRequest = createAction('auth/loginRequest');\nconst loginError = createAction('auth/loginError');\n\nconst logoutRequest = createAction('auth/logoutRequest');\nconst logoutSuccess = createAction('auth/logoutSuccess');\nconst logoutError = createAction('auth/logoutError');\n\n\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\n\n//const refreshTokenAction = createAction('auth/refreshTokenAction');\n\nconst clearError = createAction('auth/clearError');\n\nconst authActions = {\n    getRefreshTokenStart,\n    getRefreshTokenSuccess,\n    getRefreshTokenError,\n    loginSuccess,\n    loginRequest,\n    loginError,\n    logoutRequest,\n    logoutSuccess,\n    logoutError,\n    getCurrentUserRequest,\n    getCurrentUserSuccess,\n    getCurrentUserError,\n    //refreshTokenAction,\n    clearError\n};\n\nexport default authActions;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Header_container__23l0_\",\"appear\":\"Header_appear__8HZuO\",\"appearActive\":\"Header_appearActive__2VP2F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Section_container__2Ld6Z\"};"],"sourceRoot":""}