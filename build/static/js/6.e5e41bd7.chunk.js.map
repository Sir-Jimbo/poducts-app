{"version":3,"sources":["redux/products/products-selectors.js","components/Notification/Notification.jsx","components/Notification/Notification.module.css","pages/LoginPage/LoginPage.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","pages/LoginPage/LoginPage.js"],"names":["selectors","getLoading","state","products","loading","getAllProducts","getAllPages","page","getError","error","Notification","message","dispatch","useDispatch","errorAuth","useSelector","authSelectors","clearErrorAuth","useCallback","authActions","clearError","useEffect","setTimeout","in","timeout","classNames","s","unmountOnExit","className","overlay","module","exports","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","LoginPage","useState","email","setEmail","password","setPassword","isLoadingAuth","handleChange","target","name","console","warn","CSSTransition","appear","title","Spinner","form","onSubmit","e","preventDefault","authOperations","login","autoComplete","htmlFor","label","input","type","onChange","button"],"mappings":"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","file":"static/js/6.e5e41bd7.chunk.js","sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nconst getLoading = state => state.products.loading;\n\n//const getFilter = state => state.products.filter;\n\nconst getAllProducts = state => state.products.products;\n\n\nconst getError = state => state.products.error;\n\nconst getAllPages = state => state.products.page\n\n\n//const getErrorRefToken = state => state.products.refreshTokenError;\n\n//Без мемоизации\n// const getVisibleContacts = state => {\n//     const contacts = getAllContacts(state);\n//     const filter = getFilter(state);\n//     const normalizedFilter = filter.toLowerCase();\n\n//     return contacts.filter(({ name }) =>\n//         name.toLowerCase().includes(normalizedFilter),\n//     );\n// };\n\n//С мемоизацией\n/*\nconst getVisibleProducts = createSelector(\n    [getAllProducts, getFilter],\n    (products, filter) => {\n        const normalizedFilter = filter.toLowerCase();\n\n        return products.filter(({ title }) =>\n            title.toLowerCase().includes(normalizedFilter),\n        );\n    },\n);\n*/\nconst selectors = {\n    getLoading,\n    //getFilter,\n    //getVisibleProducts,\n    getAllProducts,\n    getAllPages,\n    getError,\n    // getErrorRefToken\n};\n\nexport default selectors;","import React, { useEffect, useCallback } from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport * as productsActions from '../../redux/products/products-actions';\r\nimport selectors from '../../redux/products/products-selectors';\r\nimport authSelectors from '../../redux/auth/auth-selectors';\r\nimport authActions from '../../redux/auth/auth-actions';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport s from './Notification.module.css';\r\n\r\nexport default function Notification({ message }) {\r\n   const dispatch = useDispatch();\r\n   const errorPb = useSelector(selectors.getError);\r\n   const errorAuth = useSelector(authSelectors.getError);\r\n   //const clearErrorPb = useCallback(() => dispatch(productsActions.clearError()), [dispatch]);\r\n   const clearErrorAuth = useCallback(() => dispatch(authActions.clearError()), [dispatch]);\r\n\r\n\r\n   useEffect(() => {\r\n      setTimeout(() => {\r\n         clearErrorAuth();\r\n      }, 2500);\r\n   }, [errorAuth, clearErrorAuth]);\r\n\r\n   /*\r\n      useEffect(() => {\r\n         setTimeout(() => {\r\n            clearErrorPb();\r\n         }, 2500);\r\n      }, [errorPb, clearErrorPb]);\r\n   */\r\n   return (\r\n      <CSSTransition\r\n         in={message}\r\n         timeout={250}\r\n         classNames={s}\r\n         unmountOnExit\r\n      >\r\n         <div className={s.overlay} >\r\n            <p className={s.message}>\r\n               {message}\r\n            </p>\r\n         </div>\r\n      </CSSTransition>\r\n   );\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Notification_overlay__25sWX\",\"message\":\"Notification_message__Qx2_p\",\"enter\":\"Notification_enter__1cwAv\",\"enterActive\":\"Notification_enterActive__4XaJn\",\"exit\":\"Notification_exit__1Nbxi\",\"exitActive\":\"Notification_exitActive__XLBCH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"LoginPage_form__jVq4R\",\"label\":\"LoginPage_label__jL5Oh\",\"input\":\"LoginPage_input__n47VH\",\"button\":\"LoginPage_button__2oVW5\"};","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport authOperations from '../../redux/auth/auth-operations.js';\nimport { CSSTransition } from 'react-transition-group';\nimport authSelectors from '../../redux/auth/auth-selectors';\nimport Notification from '../../components/Notification/Notification';\nimport Spinner from '../../components/Spinner/Spinner';\nimport s from './LoginPage.module.css'\n\nexport default function LoginPage() {\n  const dispatch = useDispatch();\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const error = useSelector(authSelectors.getError);\n  const isLoadingAuth = useSelector(authSelectors.getLoading);\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default: console.warn(`Тип поля name - ${name} не обрабатывается!`);\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    dispatch(authOperations.login({ email, password }));\n    setEmail('');\n    setPassword('');\n  };\n  return (\n    <div>\n      <CSSTransition\n        in={true}\n        appear={true}\n        timeout={500}\n        classNames={s}\n        unmountOnExit\n      >\n        <h1 className={s.title}>Enter your data</h1>\n      </CSSTransition>\n\n\n      <Notification\n        message={error}\n      />\n\n      {isLoadingAuth && <Spinner />}\n\n      <form\n        className={s.form}\n        onSubmit={handleSubmit}\n        autoComplete=\"off\">\n        <label\n          htmlFor=\"email\"\n          className={s.label}>\n          Email </label>\n        <input\n          className={s.input}\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          onChange={handleChange}\n        />\n\n\n        <label\n          htmlFor=\"password\"\n          className={s.label}>\n          Password</label>\n        <input\n          className={s.input}\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={handleChange}\n        />\n\n\n        <button\n          className={s.button}\n          type=\"submit\">Login</button>\n      </form>\n    </div>\n  );\n\n}\n\nLoginPage.propTypes = {\n  error: PropTypes.string,\n  isLoadingAuth: PropTypes.bool,\n};"],"sourceRoot":""}