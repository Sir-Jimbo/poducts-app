{"version":3,"sources":["redux/products/products-selectors.js","components/Notification/Notification.jsx","components/Notification/Notification.module.css","redux/products/products-operations.js","components/Logo/Logo.jsx","components/Logo/Logo.module.css","components/ProductItem/ProductItem.module.css","components/ProductsList/ProductsList.module.css","components/ProductItem/ProductItem.jsx","components/Pagination/Pagination.jsx","components/ProductsList/ProductsList.jsx","pages/ProductsPage.js"],"names":["selectors","getLoading","state","products","loading","getAllProducts","getAllPages","page","getError","error","Notification","message","dispatch","useDispatch","errorAuth","useSelector","authSelectors","clearErrorAuth","useCallback","authActions","clearError","useEffect","setTimeout","in","timeout","classNames","s","unmountOnExit","className","overlay","module","exports","BaseURL","operations","fetchProducts","getState","a","persistedToken","auth","token","AxiosToken","set","fetchProductsRequest","axios","get","data","fetchProductsSuccess","fetchProductsError","Logo","logo","ProductItem","id","title","price","image","item","src","alt","to","activeClassName","button","type","Pagination","onClick","label","ProductsList","pages","i","Math","ceil","push","TransitionGroup","component","list","map","CSSTransition","length","thumbnail","ProductsPage","isLoadingProducts","Spinner","ommountOnExit"],"mappings":"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","file":"static/js/4.0e9f0a97.chunk.js","sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nconst getLoading = state => state.products.loading;\n\n//const getFilter = state => state.products.filter;\n\nconst getAllProducts = state => state.products.products;\n\n\nconst getError = state => state.products.error;\n\nconst getAllPages = state => state.products.page\n\n\n//const getErrorRefToken = state => state.products.refreshTokenError;\n\n//Без мемоизации\n// const getVisibleContacts = state => {\n//     const contacts = getAllContacts(state);\n//     const filter = getFilter(state);\n//     const normalizedFilter = filter.toLowerCase();\n\n//     return contacts.filter(({ name }) =>\n//         name.toLowerCase().includes(normalizedFilter),\n//     );\n// };\n\n//С мемоизацией\n/*\nconst getVisibleProducts = createSelector(\n    [getAllProducts, getFilter],\n    (products, filter) => {\n        const normalizedFilter = filter.toLowerCase();\n\n        return products.filter(({ title }) =>\n            title.toLowerCase().includes(normalizedFilter),\n        );\n    },\n);\n*/\nconst selectors = {\n    getLoading,\n    //getFilter,\n    //getVisibleProducts,\n    getAllProducts,\n    getAllPages,\n    getError,\n    // getErrorRefToken\n};\n\nexport default selectors;","import React, { useEffect, useCallback } from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport * as productsActions from '../../redux/products/products-actions';\r\nimport selectors from '../../redux/products/products-selectors';\r\nimport authSelectors from '../../redux/auth/auth-selectors';\r\nimport authActions from '../../redux/auth/auth-actions';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport s from './Notification.module.css';\r\n\r\nexport default function Notification({ message }) {\r\n   const dispatch = useDispatch();\r\n   const errorPb = useSelector(selectors.getError);\r\n   const errorAuth = useSelector(authSelectors.getError);\r\n   //const clearErrorPb = useCallback(() => dispatch(productsActions.clearError()), [dispatch]);\r\n   const clearErrorAuth = useCallback(() => dispatch(authActions.clearError()), [dispatch]);\r\n\r\n\r\n   useEffect(() => {\r\n      setTimeout(() => {\r\n         clearErrorAuth();\r\n      }, 2500);\r\n   }, [errorAuth, clearErrorAuth]);\r\n\r\n   /*\r\n      useEffect(() => {\r\n         setTimeout(() => {\r\n            clearErrorPb();\r\n         }, 2500);\r\n      }, [errorPb, clearErrorPb]);\r\n   */\r\n   return (\r\n      <CSSTransition\r\n         in={message}\r\n         timeout={250}\r\n         classNames={s}\r\n         unmountOnExit\r\n      >\r\n         <div className={s.overlay} >\r\n            <p className={s.message}>\r\n               {message}\r\n            </p>\r\n         </div>\r\n      </CSSTransition>\r\n   );\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Notification_overlay__25sWX\",\"message\":\"Notification_message__Qx2_p\",\"enter\":\"Notification_enter__1cwAv\",\"enterActive\":\"Notification_enterActive__4XaJn\",\"exit\":\"Notification_exit__1Nbxi\",\"exitActive\":\"Notification_exitActive__XLBCH\"};","import axios from 'axios';\nimport { AxiosToken, BaseURL } from '../../Api/AxiosToken';\nimport {\n    fetchProductsRequest,\n    fetchProductsSuccess,\n    fetchProductsError,\n    fetchProductsPageRequest,\n    fetchProductsPageSuccess,\n    fetchProductsPageError,\n} from './products-actions';\n\n\n\nBaseURL();\n\nconst fetchProducts = (page = 1) => async (dispatch, getState) => {\n    const {\n        auth: { token: persistedToken },\n    } = getState();\n\n    if (!persistedToken) {\n        return;\n    }\n\n    AxiosToken().set(persistedToken);\n    dispatch(fetchProductsRequest());\n    try {\n        const { data } = await axios.get(`/api/products?page=${page}`);\n        AxiosToken().set(data.token);\n        dispatch(fetchProductsSuccess(data));\n    }\n    catch (error) {\n        dispatch(fetchProductsError(error.message))\n    }\n};\n/*\nconst fetchProductsPage = () => async (dispatch, getState) => {\n    const {\n        auth: { token: persistedToken },\n        page\n    } = getState();\n\n    if (!persistedToken) {\n        return;\n    }\n\n    AxiosToken().set(persistedToken);\n    dispatch(fetchProductsPageRequest());\n    try {\n        const { data } = await axios.get(`/api/products?page=${page}`);\n        AxiosToken().set(data.token);\n        dispatch(fetchProductsPageSuccess(data));\n    }\n    catch (error) {\n        dispatch(fetchProductsPageError(error.message))\n    }\n};*/\n\n\nconst operations = {\n    fetchProducts,\n    //fetchProductsPage\n};\n\nexport default operations;","import React from 'react';\r\nimport s from './Logo.module.css';\r\n\r\nconst Logo = () => {\r\n\r\n   return (\r\n      <h1 className={s.logo}>Products</h1>\r\n   )\r\n\r\n}\r\n\r\nexport default Logo;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Logo_logo__36VSw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ProductItem_item__1nsOE\",\"title\":\"ProductItem_title__2ihAe\",\"button\":\"ProductItem_button__2UUXc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ProductsList_list__1fF7Q\",\"enter\":\"ProductsList_enter__1S97B\",\"enterActive\":\"ProductsList_enterActive__1a0H0\",\"exit\":\"ProductsList_exit__3DtYw\",\"exitActive\":\"ProductsList_exitActive__3J03y\"};","\r\nimport React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport s from './ProductItem.module.css';\r\n\r\n\r\nconst ProductItem = ({ id, title, price, image }) => {\r\n   return (\r\n\r\n      <li key={id} className={s.item}>\r\n         <img src={image} alt={title} />\r\n         <h1 className={s.title}>{title}</h1>\r\n         <p className={s.price}>{price}</p>\r\n\r\n         <NavLink\r\n            to={`/products/${title}`}\r\n            className=\"NavLink\"\r\n            activeClassName=\"NavLink--active\"\r\n         >\r\n            <button\r\n               className={s.button}\r\n               type=\"button\"\r\n            >\r\n               Подробнее\r\n            </button>\r\n         </NavLink>\r\n      </li >\r\n\r\n   )\r\n}\r\n/*\r\nProduct.propTypes = {\r\n   title: PropTypes.string.isRequired,\r\n   price: PropTypes.number.isRequired,\r\n\r\n}\r\n*/\r\nexport default ProductItem;","import ProductsList from 'components/ProductsList/ProductsList';\r\nimport React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport s from './Pagination.module.css';\r\n\r\n\r\nconst Pagination = ({ page, onClick }) => {\r\n\r\n   return (\r\n\r\n      <li key={page} className={s.item} >\r\n         <NavLink\r\n            to={`/products?page=${page}`}\r\n            onClick={onClick}\r\n            className=\"NavLink\"\r\n            activeClassName={\"NavLink--active\"}\r\n         >\r\n            <p className={s.label}>{page}</p>\r\n         </NavLink>\r\n      </li>\r\n   )\r\n}\r\n/*\r\nProduct.propTypes = {\r\n   title: PropTypes.string.isRequired,\r\n   price: PropTypes.number.isRequired,\r\n \r\n}\r\n*/\r\nexport default Pagination;","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\n\r\nimport ProductItem from '../ProductItem/ProductItem';\r\nimport PaginationLink from '../PaginationLink/PaginationLink';\r\nimport Pagination from 'components/Pagination/Pagination';\r\n\r\n\r\nimport selectors from '../../redux/products/products-selectors';\r\nimport authSelectors from '../../redux/auth/auth-selectors';\r\nimport operations from '../../redux/products/products-operations';\r\nimport s from './ProductsList.module.css';\r\nimport { AxiosToken } from 'Api/AxiosToken';\r\n\r\nexport default function ProductsList() {\r\n\r\n   const products = useSelector(selectors.getAllProducts);\r\n\r\n   const dispatch = useDispatch();\r\n\r\n   useEffect((page) => {\r\n      dispatch(operations.fetchProducts(page));\r\n   }, [dispatch]);\r\n   const pages = [];\r\n   for (let i = 1; i <= Math.ceil(20); i++) {\r\n      pages.push(i);\r\n   }\r\n\r\n   return (\r\n      <>\r\n         <TransitionGroup\r\n            component=\"ul\"\r\n            className={s.list}\r\n         >\r\n            {pages.map(page => {\r\n               return (\r\n                  <CSSTransition\r\n                     key={page}\r\n                     timeout={250}\r\n                     classNames={s}\r\n                  >\r\n                     {<Pagination\r\n                        page={page}\r\n                        onClick={() => {\r\n                           dispatch(operations.fetchProducts(page))\r\n                        }}\r\n\r\n                     />\r\n                     }\r\n                  </CSSTransition>\r\n               )\r\n            })}\r\n         </TransitionGroup>\r\n         <TransitionGroup\r\n            component=\"ul\"\r\n            className={s.list}\r\n         >\r\n            {products.length !== 0 &&\r\n               products.data.map(({ id, title, price, thumbnail }) => (\r\n                  <CSSTransition\r\n                     key={id}\r\n                     timeout={250}\r\n                     classNames={s}\r\n                  >\r\n                     <ProductItem\r\n                        id={id}\r\n                        title={title}\r\n                        price={price}\r\n                        image={thumbnail}\r\n                     />\r\n                  </CSSTransition>\r\n\r\n               ))\r\n            }\r\n         </TransitionGroup >\r\n         {/*\r\n         <TransitionGroup\r\n            component=\"ul\"\r\n            className={s.list}\r\n         >\r\n            {products.length !== 0 &&\r\n               products.links.map(({ label, active }) => (\r\n                  <CSSTransition\r\n                     key={label}\r\n                     timeout={250}\r\n                     classNames={s}\r\n                  >\r\n                     {<Pagination\r\n                        page={label}\r\n                        active={active}\r\n                        onClick={() => {\r\n                           operations.fetchProducts(label)\r\n                        }}\r\n\r\n                     />\r\n                     }\r\n                  </CSSTransition>\r\n\r\n               ))\r\n            }\r\n\r\n         </TransitionGroup >*/}\r\n\r\n      </>\r\n   )\r\n}","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Logo from '../components/Logo/Logo';\nimport Notification from '../components/Notification/Notification';\nimport Spinner from '../components/Spinner/Spinner';\nimport ProductsList from '../components/ProductsList/ProductsList';\nimport PaginationLink from '../components/PaginationLink/PaginationLink';\n\nimport operations from '../redux/products/products-operations';\nimport selectors from '../redux/products/products-selectors';\n\n\nexport default function ProductsPage() {\n    const products = useSelector(selectors.getAllProducts);\n    const isLoadingProducts = useSelector(selectors.getLoading);\n\n\n\n    const error = useSelector(selectors.getError);\n    return (\n        <>\n            <Logo />\n\n            <Notification\n                message={error} />\n            {isLoadingProducts && <Spinner />}\n            <CSSTransition\n                in={products.length !== 0}\n                timeout={0}\n                ommountOnExit>\n                <ProductsList />\n            </CSSTransition>\n\n\n        </>\n    );\n};\n"],"sourceRoot":""}